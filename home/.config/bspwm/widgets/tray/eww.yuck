
;; for controls and tray
(defvar net-toggle "scripts/net.sh --toggle" )
(defpoll net-status :interval "0s" "scripts/net.sh --status")
(defvar volume-toggle "scripts/volume.sh --toggle")
(defpoll volume-status :interval "0s" "scripts/volume.sh --status")
(defvar bluetooth-toggle "scripts/bluetooth.sh --toggle")
(defpoll bluetooth-status :interval "0s" "scripts/bluetooth.sh --status")
(defpoll bluetooth-icon :interval "0s" "scripts/bluetooth.sh --icon")
(defvar dunst-toggle "scripts/dunst.sh --toggle")
(defpoll dunst-status :interval "0s" "scripts/dunst.sh --status")
(defpoll redshift :interval "0s" "[ $(pidof redshift) ] && echo '󰛨' || echo '󰹏'")

;; for sliders
(defpoll volume-slider-indicator :interval "0s" "scripts/volume-slider.sh")
(defpoll mic :interval "0s" "scripts/mic get")
(defpoll mic-slider-indicator :interval "0s" "scripts/mic-slider.sh")
(defpoll brightness :interval "0s" "scripts/brightness.sh br")
(defpoll brightness-slider-indicator :interval "0s" "scripts/brightness-slider.sh --icon")
(defpoll volume_value :interval "0s" "scripts/volume.sh vol")

(defwidget tray []
  (box :class "control-center-tray" :height 280
    (box :orientation "v" :space-evenly "false"
      (box :class "control-center-buttons" :orientation "h"
        (button :tooltip "Toggle Network [Wi-Fi]" :class "net-status-button ${net-status == "󰤨" ? "net-status-on" : "net-status-off"}" :onclick net-toggle net-status)
        (button :tooltip "Toggle Sound" :class "volume-status-button ${volume-status == "󰕾" ? "volume-status-on" : "volume-status-off"}" :onclick volume-toggle volume-status)
        (button :tooltip "Toggle Bluetooth" :class "bluetooth-status-button ${bluetooth-status == "󰂯" ? "bluetooth-status-on" : "bluetooth-status-off"}" :onclick bluetooth-toggle bluetooth-icon)
        (button :tooltip "Toggle Do not Disturb" :class "dunst-status-button ${dunst-status == "" ? "dunst-status-on" : "dunst-status-off"}" :onclick dunst-toggle dunst-status)
        (button :tooltip "Toggle Night Light" :class "redshift-status-button ${redshift == "󰛨" ? "redshift-status-on" : "redshift-status-off"}" :onclick "[ $(pidof redshift) ] && pkill redshift || redshift &" redshift))
      (box :orientation "h" :class "volume-slider-stuff" :space-evenly "false"
        (button :onclick "amixer set Master toggle" :class "volume-slider-icon" "${volume-slider-indicator}")
        (scale :class "volume-slider"
                :value volume_value
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "scripts/volume.sh set {}"))
      (box :orientation "h" :class "mic-slider-stuff" :space-evenly "false"
        (button :onclick "amixer set Capture toggle" :class "mic-slider-icon" "${mic-slider-indicator}")
        (scale :class "mic-slider"
                :value mic
                :orientation "h"
                :width 370
                :active true
                :max 101
                :min 0
                :onchange "scripts/mic set {}"))
      (box :orientation "h" :class "brightness-slider-stuff" :space-evenly "false"
        (button :class "brightness-slider-icon" "${brightness-slider-indicator}")
        (scale :class "brightness-slider"
                :orientation "h"
                :max 101
                :min 0
                :active true
                :value brightness
                :width 370
                :onchange "scripts/brightness.sh set {}")))))

(defwindow tray :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :monitor 0
  :geometry (geometry :width 498 :height 50 :y 67 :x 1350)
  (tray))